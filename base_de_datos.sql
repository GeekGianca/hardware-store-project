-- MySQL Script generated by MySQL Workbench
-- Tue Dec 17 10:24:04 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ferreteria_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ferreteria_db` ;

-- -----------------------------------------------------
-- Schema ferreteria_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ferreteria_db` DEFAULT CHARACTER SET utf8 ;
USE `ferreteria_db` ;

-- -----------------------------------------------------
-- Table `ferreteria_db`.`Categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`Categoria` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`Categoria` (
  `idcategoria` INT NOT NULL,
  `nombre` VARCHAR(500) NOT NULL,
  `cantidad_disponible` INT NOT NULL,
  PRIMARY KEY (`idcategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria_db`.`Productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`Productos` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`Productos` (
  `idproducto` VARCHAR(40) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `precio_venta` DOUBLE NOT NULL,
  `precio_compra` DOUBLE NOT NULL,
  `fecha_registro` DATETIME NOT NULL,
  `disponibilidad` INT NOT NULL,
  `categoria_idcategoria` INT NOT NULL,
  PRIMARY KEY (`idproducto`),
  INDEX `fk_products_category1_idx` (`categoria_idcategoria` ASC) ,
  CONSTRAINT `fk_products_category1`
    FOREIGN KEY (`categoria_idcategoria`)
    REFERENCES `ferreteria_db`.`Categoria` (`idcategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria_db`.`Proveedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`Proveedor` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`Proveedor` (
  `idproveedor` VARCHAR(100) NOT NULL,
  `nombre` VARCHAR(500) NOT NULL,
  `ciudad` VARCHAR(500) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `nombre_contacto` VARCHAR(5000) NOT NULL,
  PRIMARY KEY (`idproveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria_db`.`Facturas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`Facturas` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`Facturas` (
  `idfactura` INT NOT NULL,
  `noventa` TEXT NOT NULL,
  `cantidad_productos` INT NOT NULL,
  `total_venta` DOUBLE NOT NULL,
  `fechahora_venta` DATETIME NOT NULL,
  `detalle_venta` TEXT NOT NULL,
  PRIMARY KEY (`idfactura`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria_db`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`Cliente` (
  `idCliente` INT NOT NULL,
  `nombre` VARCHAR(500) NOT NULL,
  `direccion` TEXT NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria_db`.`F_Venta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`F_Venta` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`F_Venta` (
  `Factura_idfactura` INT NOT NULL,
  `Cliente_idCliente` INT NOT NULL,
  PRIMARY KEY (`Factura_idfactura`),
  INDEX `fk_F_Venta_Cliente1_idx` (`Cliente_idCliente` ASC) ,
  CONSTRAINT `fk_F_Venta_Factura1`
    FOREIGN KEY (`Factura_idfactura`)
    REFERENCES `ferreteria_db`.`Facturas` (`idfactura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_F_Venta_Cliente1`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `ferreteria_db`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria_db`.`F_Compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`F_Compra` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`F_Compra` (
  `Factura_idfactura` INT NOT NULL,
  `Proveedor_idproveedor` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`Factura_idfactura`),
  INDEX `fk_F_Compra_Proveedor1_idx` (`Proveedor_idproveedor` ASC) ,
  CONSTRAINT `fk_F_Compra_Factura1`
    FOREIGN KEY (`Factura_idfactura`)
    REFERENCES `ferreteria_db`.`Facturas` (`idfactura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_F_Compra_Proveedor1`
    FOREIGN KEY (`Proveedor_idproveedor`)
    REFERENCES `ferreteria_db`.`Proveedor` (`idproveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ferreteria_db`.`Detalle_Factura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ferreteria_db`.`Detalle_Factura` ;

CREATE TABLE IF NOT EXISTS `ferreteria_db`.`Detalle_Factura` (
  `Productos_idproducto` VARCHAR(40) NOT NULL,
  `Facturas_idfactura` INT NOT NULL,
  INDEX `fk_Detalle_Factura_Productos1_idx` (`Productos_idproducto` ASC) ,
  INDEX `fk_Detalle_Factura_Facturas1_idx` (`Facturas_idfactura` ASC) ,
  CONSTRAINT `fk_Detalle_Factura_Productos1`
    FOREIGN KEY (`Productos_idproducto`)
    REFERENCES `ferreteria_db`.`Productos` (`idproducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Detalle_Factura_Facturas1`
    FOREIGN KEY (`Facturas_idfactura`)
    REFERENCES `ferreteria_db`.`Facturas` (`idfactura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
